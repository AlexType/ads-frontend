import { Button, Card, Row, Col, Typography, Collapse } from 'antd';
import { ArrowRightOutlined, CheckCircleOutlined } from '@ant-design/icons';
import { motion, useScroll, useTransform } from 'framer-motion';
import { useNavigate } from 'react-router-dom';
import { useQuery } from '@tanstack/react-query';
import { axiosInstance } from 'shared/api/axios';
import { ParallaxParticles } from '../../components/ParallaxParticles';
import './landing.css';

const { Title, Paragraph } = Typography;

interface LandingData {
  hero: {
    title: string;
    subtitle: string;
    ctaText: string;
    backgroundImage?: string;
    videoUrl?: string;
  };
  features?: Array<{
    title: string;
    description: string;
    icon: string;
    link: string;
  }>;
  stats?: {
    totalBloggers: number;
    totalAdvertisers: number;
    totalOrders: number;
    totalRevenue: number;
  };
  faq?: Array<{
    question: string;
    answer: string;
  }>;
}

export const LandingPage = () => {
  const navigate = useNavigate();
  const { scrollY } = useScroll();
  const heroY = useTransform(scrollY, [0, 500], [0, 200]);
  const heroOpacity = useTransform(scrollY, [0, 300], [1, 0]);
  
  // Fetch landing data
  const { data: landingData } = useQuery({
    queryKey: ['landing-data'],
    queryFn: async () => {
      const { data } = await axiosInstance.get('/public/landing');
      return data.data;
    },
    refetchOnWindowFocus: false,
  });

  // Fetch services
  const { data: services } = useQuery({
    queryKey: ['services'],
    queryFn: async () => {
      const { data } = await axiosInstance.get('/public/services');
      return data.data;
    },
    refetchOnWindowFocus: false,
  });

  const handleRegister = (role: 'blogger' | 'advertiser') => {
    navigate(`/register?role=${role}`);
  };

  // Animation variants
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
      },
    },
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: { opacity: 1, y: 0 },
  };

  // Default data if API returns empty
  const defaultFeatures = [
    {
      title: 'AI-–ü–æ–¥–±–æ—Ä –±–ª–æ–≥–µ—Ä–æ–≤',
      description: '–£–º–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –ø–æ–¥–±–∏—Ä–∞–µ—Ç –∏–¥–µ–∞–ª—å–Ω—ã—Ö –∏–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä–æ–≤ –¥–ª—è –≤–∞—à–µ–≥–æ –±—Ä–µ–Ω–¥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏ –∏ –Ω–∏—à–∏',
      icon: 'ü§ñ',
    },
    {
      title: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–æ—Ü—Å–µ—Ç—è–º–∏',
      description: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ VK, Telegram –∏ TikTok. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏',
      icon: 'üì±',
    },
    {
      title: '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏',
      description: '–≠—Å–∫—Ä–æ—É —Å–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—â–∞–µ—Ç –æ–±–µ —Å—Ç–æ—Ä–æ–Ω—ã. –û–ø–ª–∞—Ç–∞ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞',
      icon: 'üîí',
    },
    {
      title: '–î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
      description: '–¢–æ—á–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –æ—Ö–≤–∞—Ç–∞, –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏ –∏ ROI –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞–º–ø–∞–Ω–∏–∏',
      icon: 'üìä',
    },
  ];

  const defaultStats = {
    totalBloggers: 5000,
    totalAdvertisers: 1500,
    totalOrders: 10000,
    totalRevenue: 50000000,
  };

  const defaultFAQ = [
    {
      question: '–ö–∞–∫ –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –±–ª–æ–≥–µ—Ä–∞?',
      answer: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∞—É–¥–∏—Ç–æ—Ä–∏–∏, –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∏ –±—é–¥–∂–µ—Ç—É. –ù–∞—à AI-–∞–ª–≥–æ—Ä–∏—Ç–º —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –∏–¥–µ–∞–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã.',
    },
    {
      question: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–ø–ª–∞—Ç–∞?',
      answer: '–î–µ–Ω—å–≥–∏ –∑–∞–º–æ—Ä–∞–∂–∏–≤–∞—é—Ç—Å—è –Ω–∞ –Ω–∞—à–µ–º —ç—Å–∫—Ä–æ—É-—Å—á–µ—Ç–µ –¥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞. –ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ø–ª–∞—Ç–∞ –±–ª–æ–≥–µ—Ä—É.',
    },
    {
      question: '–ù—É–∂–Ω–æ –ª–∏ –ø–ª–∞—Ç–∏—Ç—å –∫–æ–º–∏—Å—Å–∏—é?',
      answer: '–î–∞, –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –±–µ—Ä–µ—Ç –Ω–µ–±–æ–ª—å—à—É—é –∫–æ–º–∏—Å—Å–∏—é —Å –∫–∞–∂–¥–æ–π —É—Å–ø–µ—à–Ω–æ–π —Å–¥–µ–ª–∫–∏. –î–ª—è –±–ª–æ–≥–µ—Ä–æ–≤ –∏ —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π –∫–æ–º–∏—Å—Å–∏—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 10% —Å –æ–±–µ–∏—Ö —Å—Ç–æ—Ä–æ–Ω.',
    },
    {
      question: '–ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Å–≤–æ–∏ —Å–æ—Ü—Å–µ—Ç–∏?',
      answer: '–í –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –µ—Å—Ç—å —Ä–∞–∑–¥–µ–ª "–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã". –ù–∞–∂–º–∏—Ç–µ "–ü–æ–¥–∫–ª—é—á–∏—Ç—å" –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –¥–ª—è VK, Telegram –∏–ª–∏ TikTok.',
    },
  ];

  return (
    <div className="landing-page">
      {/* Parallax Background Particles */}
      <ParallaxParticles />
      
      {/* Header */}
      <header className="landing-header">
        <div className="container">
          <motion.div
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            className="header-content"
          >
            <div className="logo-section">
              <div className="logo-icon">üåü</div>
              <span className="logo-text">InfluencerHub</span>
            </div>
            <nav className="header-nav">
              <Button 
                type="text" 
                className="nav-link"
                onClick={() => window.scrollTo({ top: (document.getElementById('features')?.offsetTop || 0) - 70, behavior: 'smooth' })}
              >
                –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
              </Button>
              <Button 
                type="text" 
                className="nav-link"
                onClick={() => window.scrollTo({ top: (document.getElementById('faq')?.offsetTop || 0) - 70, behavior: 'smooth' })}
              >
                FAQ
              </Button>
              <Button 
                type="text" 
                className="nav-link"
                onClick={() => navigate('/login')}
              >
                –í–æ–π—Ç–∏
              </Button>
              <Button 
                type="primary" 
                className="nav-button-primary"
                onClick={() => navigate('/register')}
              >
                –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
              </Button>
          </nav>
          </motion.div>
        </div>
      </header>

      {/* Hero Section */}
      <section className="hero-section">
        <div className="hero-background" />
        <div className="hero-gradient" />
        <motion.div 
          className="hero-parallax-bg"
          style={{ y: heroY, opacity: heroOpacity }}
        />
        
        {/* Floating –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
        <div className="hero-decoration">
          <motion.div 
            className="hero-orb hero-orb-1"
            animate={{ 
              y: [0, 30, 0],
              x: [0, 20, 0],
            }}
            transition={{ 
              duration: 8,
              repeat: Infinity,
              ease: "easeInOut"
            }}
          />
          <motion.div 
            className="hero-orb hero-orb-2"
            animate={{ 
              y: [0, -25, 0],
              x: [0, -15, 0],
            }}
            transition={{ 
              duration: 6,
              repeat: Infinity,
              ease: "easeInOut",
              delay: 1
            }}
          />
          <motion.div 
            className="hero-orb hero-orb-3"
            animate={{ 
              y: [0, 35, 0],
              x: [0, -25, 0],
            }}
            transition={{ 
              duration: 7,
              repeat: Infinity,
              ease: "easeInOut",
              delay: 0.5
            }}
          />
        </div>

        {/* –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–µ –∫–æ–ª—å—Ü–∞ */}
        <div className="hero-rings">
          <motion.div 
            className="hero-ring hero-ring-1"
            animate={{ 
              rotate: 360,
            }}
            transition={{ 
              duration: 50,
              repeat: Infinity,
              ease: "linear"
            }}
          />
          <motion.div 
            className="hero-ring hero-ring-2"
            animate={{ 
              rotate: -360,
            }}
            transition={{ 
              duration: 60,
              repeat: Infinity,
              ease: "linear"
            }}
          />
        </div>

        <div className="container">
          <motion.div
            initial={{ opacity: 0, y: 50 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="hero-content"
          >
            {/* Badge */}
            <motion.div
              initial={{ opacity: 0, scale: 0.8 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ delay: 0.3, duration: 0.5 }}
              className="hero-badge"
            >
              <span>‚ú® –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ã</span>
            </motion.div>

            <Title className="hero-title">
              {(landingData as LandingData)?.hero?.title || '–ù–∞–π–¥–∏—Ç–µ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –±–ª–æ–≥–µ—Ä–∞ –¥–ª—è –≤–∞—à–µ–≥–æ –±—Ä–µ–Ω–¥–∞'}
            </Title>
            <Paragraph className="hero-subtitle">
              {(landingData as LandingData)?.hero?.subtitle || '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ —Å –∏–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä–∞–º–∏. –ë—ã—Å—Ç—Ä–æ, –ø—Ä–æ—Å—Ç–æ, —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ.'}
            </Paragraph>
            
            <div className="hero-cta">
              <Button
                type="primary"
                size="large"
                className="cta-button primary"
                onClick={() => handleRegister('advertiser')}
                icon={<ArrowRightOutlined />}
              >
                –î–ª—è —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π
              </Button>
              <Button
                type="default"
                size="large"
                className="cta-button"
                onClick={() => handleRegister('blogger')}
              >
                –î–ª—è –±–ª–æ–≥–µ—Ä–æ–≤
              </Button>
            </div>
          </motion.div>
        </div>
      </section>

      {/* Statistics */}
      <section className="statistics-section">
        <div className="container">
          <motion.div
            variants={containerVariants}
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true }}
            className="stats-grid"
          >
            {[
              { 
                icon: 'üì±', 
                label: '–ê–∫—Ç–∏–≤–Ω—ã—Ö –±–ª–æ–≥–µ—Ä–æ–≤', 
                value: landingData?.stats?.totalBloggers || defaultStats.totalBloggers, 
                suffix: '+' 
              },
              { 
                icon: 'üíº', 
                label: '–†–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π', 
                value: landingData?.stats?.totalAdvertisers || defaultStats.totalAdvertisers, 
                suffix: '+' 
              },
              { 
                icon: '‚úÖ', 
                label: '–ó–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤', 
                value: landingData?.stats?.totalOrders || defaultStats.totalOrders, 
                suffix: '+' 
              },
              { 
                icon: 'üí∞', 
                label: '–í—ã–ø–ª–∞—á–µ–Ω–æ –±–ª–æ–≥–µ—Ä–∞–º', 
                value: Math.round((landingData?.stats?.totalRevenue || defaultStats.totalRevenue) / 1000000), 
                suffix: ' –º–ª–Ω ‚ÇΩ' 
              },
            ].map((stat, index) => (
              <motion.div
                key={index}
                variants={itemVariants}
                className="stat-card"
              >
                <div className="stat-card-content">
                  <div className="stat-icon">{stat.icon}</div>
                  <div className="stat-number">{stat.value}{stat.suffix}</div>
                  <div className="stat-label">{stat.label}</div>
                </div>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </section>

      {/* Features */}
      <section id="features" className="features-section">
        <div className="container">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="section-header"
          >
            <Title level={2} className="section-title">
              –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å?
            </Title>
            <Paragraph className="section-subtitle">
              –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –±–ª–æ–≥–µ—Ä–æ–≤ –∏ —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π
            </Paragraph>
          </motion.div>

          <Row gutter={[24, 24]} className="features-grid">
            {(landingData as LandingData)?.features?.map((feature, index) => (
              <Col xs={24} sm={12} key={index}>
                <motion.div
                  whileHover={{ scale: 1.02 }}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ delay: index * 0.1 }}
                >
                      <Card className="feature-card" bordered={false}>
                    <div className="feature-icon-wrapper">
                      <div className="feature-icon-reel">
                        {feature.icon || '‚ú®'}
                      </div>
                    </div>
                    <Title level={4}>{feature.title}</Title>
                    <Paragraph className="feature-description">{feature.description}</Paragraph>
                  </Card>
                </motion.div>
              </Col>
            )) || defaultFeatures.map((feature, index) => (
              <Col xs={24} sm={12} key={index}>
                <motion.div
                  whileHover={{ scale: 1.02 }}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ delay: index * 0.1 }}
                >
                  <Card className="feature-card" bordered={false}>
                    <div className="feature-icon-wrapper">
                      <div className="feature-icon-reel">
                        {feature.icon}
                      </div>
                    </div>
                    <Title level={4}>{feature.title}</Title>
                    <Paragraph className="feature-description">{feature.description}</Paragraph>
                  </Card>
                </motion.div>
              </Col>
            ))}
          </Row>
        </div>
      </section>

      {/* Services */}
      {services && services.length > 0 && (
        <section className="services-section">
          <div className="container">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              className="section-header"
            >
              <Title level={2} className="section-title">
                –ù–∞—à–∏ —É—Å–ª—É–≥–∏
              </Title>
              <Paragraph className="section-subtitle">
                –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞
              </Paragraph>
            </motion.div>

            <Row gutter={[32, 32]} className="services-grid">
              {services.map((service: { name: string; price: number; period: string; description?: string; features?: string[]; targetRole?: string }, index: number) => (
                <Col xs={24} md={12} lg={8} key={index}>
                  <motion.div
                    whileHover={{ scale: 1.03, y: -10 }}
                    initial={{ opacity: 0, y: 30 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    viewport={{ once: true }}
                    transition={{ delay: index * 0.15 }}
                  >
                    <Card 
                      className={`service-card ${index === Math.floor(services.length / 2) ? 'service-card-featured' : ''}`}
                      bordered={false}
                    >
                      {index === Math.floor(services.length / 2) && (
                        <div className="service-badge">
                          <span>–ü–æ–ø—É–ª—è—Ä–Ω–æ</span>
                        </div>
                      )}
                      
                      <div className="service-header">
                        <div className="service-icon-wrapper">
                          <div className="service-icon">‚ú®</div>
                        </div>
                        <Title level={3} className="service-title">{service.name}</Title>
                        <Paragraph className="service-description">
                          {service.description || `–ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è ${service.name.toLowerCase()}`}
                        </Paragraph>
                      </div>

                      <div className="service-pricing">
                        <div className="service-price-main">
                          <span className="service-price-amount">{service.price}</span>
                          <span className="service-price-currency">‚ÇΩ</span>
                        </div>
                        <span className="service-period">{service.period}</span>
                      </div>

                      <div className="service-features-container">
                        <ul className="service-features">
                          {service.features?.map((feature: string, idx: number) => (
                            <li key={idx} className="service-feature-item">
                              <CheckCircleOutlined className="service-feature-icon" />
                              <span>{feature}</span>
                            </li>
                          ))}
                        </ul>
                      </div>

                      <Button 
                        type="primary" 
                        block 
                        size="large" 
                        className="service-button"
                        onClick={() => navigate(`/register?role=${service.targetRole || 'advertiser'}`)}
                      >
                        –í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω
                      </Button>
                    </Card>
                  </motion.div>
                </Col>
              ))}
            </Row>
          </div>
        </section>
      )}

      {/* FAQ */}
      <section id="faq" className="faq-section">
        <div className="container">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="section-header"
          >
            <Title level={2} className="section-title">
              –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
            </Title>
          </motion.div>

          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="faq-content"
          >
            <Collapse
              items={(landingData as LandingData)?.faq?.map((item, index) => ({
                key: String(index),
                label: item.question,
                children: <Paragraph>{item.answer}</Paragraph>,
              })) || defaultFAQ.map((item, index) => ({
                key: String(index),
                label: item.question,
                children: <Paragraph>{item.answer}</Paragraph>,
              }))}
              className="faq-accordion"
            />
          </motion.div>
        </div>
      </section>

      {/* Footer CTA */}
      <section className="cta-section">
        <div className="container">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="cta-content"
          >
            <Title level={2} className="cta-title">
              –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?
            </Title>
            <Paragraph className="cta-subtitle">
              –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Ç—ã—Å—è—á–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É–∂–µ —Å–µ–≥–æ–¥–Ω—è
            </Paragraph>
            <div className="cta-buttons">
              <Button
                type="primary"
                size="large"
                className="cta-button primary"
                onClick={() => navigate('/register')}
              >
                –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç
              </Button>
            </div>
          </motion.div>
        </div>
      </section>

      {/* Footer */}
      <footer className="landing-footer">
        <div className="container">
          <div className="footer-content">
            <div className="footer-brand">
              <div className="footer-logo-section">
                <div className="footer-logo-icon">üåü</div>
                <span className="footer-logo-text">InfluencerHub</span>
              </div>
              <Paragraph className="footer-description">
                –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –±–ª–æ–≥–µ—Ä–æ–≤ –∏ —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π. 
                –ù–∞—Ö–æ–¥–∏–º –∏–¥–µ–∞–ª—å–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.
              </Paragraph>
              <div className="footer-social">
                <a href="#" className="social-link" aria-label="–í–ö–æ–Ω—Ç–∞–∫—Ç–µ">üì±</a>
                <a href="#" className="social-link" aria-label="Telegram">‚úàÔ∏è</a>
                <a href="#" className="social-link" aria-label="Instagram">üì∏</a>
              </div>
            </div>
            
            <div className="footer-column">
              <Title level={5} className="footer-column-title">–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞</Title>
              <div className="footer-links-list">
                <a href="#features" className="footer-link">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</a>
                <a href="#faq" className="footer-link">FAQ</a>
                <a href="/register?role=blogger" className="footer-link">–î–ª—è –±–ª–æ–≥–µ—Ä–æ–≤</a>
                <a href="/register?role=advertiser" className="footer-link">–î–ª—è —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π</a>
              </div>
            </div>

            <div className="footer-column">
              <Title level={5} className="footer-column-title">–†–µ—Å—É—Ä—Å—ã</Title>
              <div className="footer-links-list">
                <a href="#" className="footer-link">–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</a>
                <a href="#" className="footer-link">API</a>
                <a href="#" className="footer-link">–ë–ª–æ–≥</a>
                <a href="#" className="footer-link">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</a>
              </div>
            </div>

            <div className="footer-column">
              <Title level={5} className="footer-column-title">–ö–æ–Ω—Ç–∞–∫—Ç—ã</Title>
              <div className="footer-links-list">
                <a href="mailto:info@influencerhub.ru" className="footer-link">
                  üìß info@influencerhub.ru
                </a>
                <a href="tel:+79991234567" className="footer-link">
                  üìû +7 (999) 123-45-67
                </a>
                <span className="footer-link" style={{ color: 'rgba(255, 255, 255, 0.6)' }}>
                  üïê –ï–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 9:00 –¥–æ 21:00
                </span>
              </div>
            </div>
          </div>

          <div className="footer-bottom">
            <div className="footer-bottom-content">
              <Paragraph className="footer-copyright">
                ¬© 2025 InfluencerHub. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
              </Paragraph>
              <div className="footer-legal">
                <a href="#" className="footer-legal-link">–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>
                <a href="#" className="footer-legal-link">–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</a>
                <a href="#" className="footer-legal-link">Cookies</a>
              </div>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
};
